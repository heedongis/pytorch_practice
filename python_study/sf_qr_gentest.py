import segno as se
from PIL import Image, ImageDraw, ImageFont
import io
# test_qr = se.make_qr("2021_A@washswat.com")
# test_qr.save("./test2.png", scale=20, border=10, dark="darkblue", data_dark="green")

barim_router_list = ["1001_A",
"1001_B",
"1001_C",
"1001_D",
"1002_A",
"1002_B",
"1002_C",
"1002_D",
"1003_A",
"1003_B",
"1003_C",
"1003_D",
"1004_A",
"1004_B",
"1004_C",
"1004_D",
"1005_A",
"1005_B",
"1005_C",
"1005_D",
"1006_A",
"1006_B",
"1006_C",
"1006_D",
"1007_A",
"1007_B",
"1007_C",
"1007_D",
"1008_A",
"1008_B",
"1008_C",
"1008_D",
"1009_A",
"1009_B",
"1009_C",
"1009_D",
"1010_A",
"1010_B",
"1010_C",
"1010_D",
"1011_A",
"1011_B",
"1011_C",
"1011_D",
"1012_A",
"1012_B",
"1012_C",
"1012_D",
"1013_A",
"1013_B",
"1013_C",
"1013_D",
"1014_A",
"1014_B",
"1014_C",
"1014_D",
"1015_A",
"1015_B",
"1015_C",
"1016_A",
"1016_B",
"1016_C",
"1016_D",
"1017_A",
"1017_B",
"1017_C",
"1017_D",
"1018_A",
"1018_B",
"1018_C",
"1018_D",
"1019_A",
"1019_B",
"1019_C",
"1019_D",
"1020_A",
"1020_B",
"1020_C",
"1020_D",
"1021_A",
"1021_B",
"1021_C",
"1021_D",
"1022_A",
"1022_B",
"1022_C",
"1023_A",
"1023_B",
"1023_C",
"1023_D",
"1024_A",
"1024_B",
"1024_C",
"1024_D",
"1025_A",
"1025_B",
"1025_C",
"1026_A",
"1026_B",
"1026_C",
"1026_D",
"1027_A",
"1027_B",
"1027_C",
"1027_D",
"1028_A",
"1028_B",
"1028_C",
"1028_D",
"1029_B",
"1029_C",
"1029_D",
"1030_A",
"1030_B",
"1030_C",
"1030_D",
"1031_A",
"1031_B",
"1031_C",
"1031_D",
"1032_A",
"1032_B",
"1032_C",
"1032_D",
"1032_E",
"1033_A",
"1033_B",
"1033_C",
"1033_D",
"1034_A",
"1034_B",
"1034_C",
"1034_D",
"1035_A",
"1035_B",
"1035_C",
"1035_D",
"1036_A",
"1036_B",
"1036_C",
"1036_D",
"1037_A",
"1037_B",
"1037_C",
"1037_D",
"1038_A",
"1038_B",
"1038_C",
"1038_D",
"1039_A",
"1039_B",
"1039_C",
"1039_D",
"1040_A",
"1040_B",
"1040_C",
"1040_D",
"1041_A",
"1041_B",
"1041_C",
"1041_D",
"1042_A",
"1042_B",
"1042_C",
"1042_D",
"1043_A"]
yangju_router_list =["2001_A",
"2001_B",
"2001_C",
"2001_D",
"2002_A",
"2002_B",
"2002_C",
"2002_D",
"2002_E",
"2003_A",
"2003_B",
"2003_C",
"2003_D",
"2003_E",
"2004_A",
"2004_B",
"2004_C",
"2004_D",
"2005_A",
"2005_B",
"2005_C",
"2005_D",
"2006_A",
"2006_B",
"2006_C",
"2006_D",
"2007_A",
"2007_B",
"2007_C",
"2007_D",
"2007_E",
"2008_A",
"2008_B",
"2008_C",
"2008_D",
"2009_A",
"2009_B",
"2009_C",
"2009_D",
"2010_A",
"2010_B",
"2010_C",
"2011_A",
"2011_B",
"2011_C",
"2011_D",
"2012_A",
"2012_B",
"2012_C",
"2012_D",
"2013_A",
"2013_B",
"2013_C",
"2013_D",
"2014_A",
"2014_B",
"2014_C",
"2014_D",
"2019_A",
"2019_B",
"2019_C",
"2019_D",
"2020_A",
"2020_B",
"2020_C",
"2020_D",
"2021_A",
"2021_B",
"2021_C",
"2021_D",
"2021_E",
"2022_A",
"2022_B",
"2022_C",
"2022_D",
"2023_A",
"2023_B",
"2023_C",
"2023_D",
"2023_E",
"2024_A",
"2024_B",
"2024_C",
"2024_D",
"2025_A",
"2025_B",
"2025_C",
"2025_D",
"2026_A",
"2026_B",
"2026_C",
"2026_D",
"2027_A",
"2027_B",
"2027_C",
"2028_A",
"2028_B",
"2028_C",
"2028_D",
"2029_A",
"2029_B",
"2029_C",
"2029_D",
"2030_A",
"2030_B",
"2030_C",
"2030_D",
"2031_A",
"2031_B",
"2031_C",
"2031_D",
"2032_A",
"2032_B",
"2032_C",
"2032_D",
"2033_A",
"2033_B",
"2033_C",
"2033_D",
"2034_A",
"2034_B",
"2034_C",
"2034_D",
"2035_A",
"2035_B",
"2035_C",
"2035_D",
"2036_A",
"2036_B",
"2036_C",
"2036_D",
"2037_A",
"2037_B",
"2037_C",
"2037_D",
"2038_A",
"2038_B",
"2038_C",
"2038_D",
"2039_A",
"2039_B",
"2039_C",
"2039_D",
"2040_A",
"2040_B",
"2040_D",
"2041_A",
"2041_B",
"2041_C",
"2041_D",
"2042_A",
"2042_B",
"2042_C",
"2043_A",
"2043_B",
"2043_C",
"2043_D",
"2044_A",
"2044_B",
"2044_C",
"2044_D"]
font_path = "/Users/warren/Library/Fonts/FiraCode-VariableFont_wght.ttf"  # 사용할 폰트 파일의 경로 설정
font_size = 80  # 폰트 크기 설정
font = ImageFont.truetype(font_path, font_size,)
save_path = './sf2_qrcode/'+'router'+'.png'

for router in yangju_router_list:

    qr_code = se.make_qr(router)
    qr_buffer = io.BytesIO()  # 메모리 내 버퍼 생성
    qr_code.save(qr_buffer, scale=20, kind='png', border=10, dark="darkblue", data_dark="green")
    qr_buffer.seek(0)  # 버퍼의 시작 지점으로 이동
    qr_img = Image.open(qr_buffer)

    label = router
    width, height = qr_img.size
    label_height = 100  # 라벨의 예상 높이
    new_height = height + label_height
    img_with_label = Image.new('RGB', (width, new_height), 'white')
    img_with_label.paste(qr_img, (0, 0))
    draw = ImageDraw.Draw(img_with_label)

    text_bbox = draw.textbbox((0, 0), label, font=font)
    text_width, text_height = text_bbox[2] - text_bbox[0], text_bbox[3] - text_bbox[1]

    text_x = (width - text_width) / 2
    text_y = height -50  # 여백을 더 추가하려면 이 값을 조정하세요

    # text_y = height + (label_height - text_height) / 2  # 라벨을 가운데 정렬
    draw.text((text_x, text_y), label, fill='black', font=font)

    # 결과 이미지 저장 또는 표시
    img_with_label.save('./sf2_qrcode/'+router+'.png')
# for router in yangju_router_list:
#     qr_code = se.make_qr(router)
#     qr_code.save("./sf2_qrcode/"+router+".png", scale=20, border=10, dark="darkblue", data_dark="green")